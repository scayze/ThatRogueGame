[gd_scene load_steps=8 format=2]

[ext_resource path="res://Environment/Animaciones/arbol_idle.png" type="Texture" id=1]
[ext_resource path="res://Scenes/Entities/Tree.gd" type="Script" id=2]
[ext_resource path="res://Environment/Animaciones/arbol_attack.png" type="Texture" id=3]

[sub_resource type="Shader" id=1]
code = "shader_type canvas_item;

void fragment() {
	vec4 sc = texture(SCREEN_TEXTURE,SCREEN_UV);
	vec4 c = texture(TEXTURE,UV);
	if(c.a == 1.0) COLOR = c;
	else if(sc.g > sc.r && sc.r > sc.b) COLOR = c;
	else COLOR = vec4(0,0,0,0);
}"

[sub_resource type="ShaderMaterial" id=2]
shader = SubResource( 1 )

[sub_resource type="Animation" id=3]
length = 0.4
tracks/0/type = "value"
tracks/0/path = NodePath(".:region_rect")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.1, 0.2, 0.3 ),
"transitions": PoolRealArray( 1, 1, 1, 1 ),
"update": 2,
"values": [ Rect2( 0, 0, 57, 59 ), Rect2( 57, 0, 57, 59 ), Rect2( 114, 0, 57, 59 ), Rect2( 171, 0, 57, 59 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath(".:texture")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 0.4 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 1,
"values": [ ExtResource( 3 ), ExtResource( 1 ) ]
}

[sub_resource type="Animation" id=4]
length = 1.6
loop = true
tracks/0/type = "value"
tracks/0/path = NodePath(".:region_rect")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.4, 0.8, 1.2 ),
"transitions": PoolRealArray( 1, 1, 1, 1 ),
"update": 2,
"values": [ Rect2( 0, 0, 57, 59 ), Rect2( 57, 0, 57, 59 ), Rect2( 114, 0, 57, 59 ), Rect2( 171, 0, 57, 59 ) ]
}

[node name="Tree" type="Sprite"]
material = SubResource( 2 )
texture = ExtResource( 1 )
offset = Vector2( -3, -20 )
region_enabled = true
region_rect = Rect2( 171, 0, 57, 59 )
script = ExtResource( 2 )
max_hp = 3
is_blocking = true
visible_health = false

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
anims/Attack = SubResource( 3 )
anims/Idle = SubResource( 4 )

[connection signal="animation_finished" from="AnimationPlayer" to="." method="_on_animation_finished"]
